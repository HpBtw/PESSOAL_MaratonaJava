domain é utillizado para colocar o produto em análise/desenvolvimento no mercado
por exemplo, o estudante terá seus dados inseridos, por isso ele será analisado

test é o pacote para testar as classes

quando criando um projeto pra empresa, o método padrão é br.nomeDaEmpresa.pacote
exemplo: br.fiap.exercicio7

===========================

possivel passar os atributos de dentro de um objeto para outro por referência
ex:
carro1.nome = mustang
carro1.ano = 1978
carro2 = carro1;

sout(carro2)
resulta em
mustang
1978

isso só é possível com objetos na mesma linha de herança

===========================

Caso seu método tenha mais que 3 argumentos, é provável que, vista do ponto de vista das boas práticas,
seu método esteja sobrecarregado de funções, e é inteligente a função dele seja dividida

utilizando o return sem valor, ex: return;
o laço em que ele se encontra é quebrado, e o método é finalizado

===========================

o this.var vai se referenciar à variável pertencente unicamente aquela variável instanciada
ex:
estudante1.nome = luciano
estudante2.nome = maru

estudante1.print(this.nome)
resulta em
luciano

estudante2.print(this.nome)
resulta em
maru

=============================

quando um objeto é instanciado, cria-se o objeto (new) e o seu construtor é ativado
antes de qualquer outro método
Obj obj = new Obj("nomeDoObjeto");
inicia-se o builder

é possivel fazer uma sobrecarga de builders, mais informações anotadas em 
maratona-java/src/construtores/domain/ObjetoGenerico

=============================

é possivel chamar um construtor dentro de outro construtor utilizando o termo 'this()' (referencia ao build do objeto e parametros dentro
do paranteses pra overload

=============================

Quando se cria um objeto:
// 0º Quando há um bloco de inicialização estática, ele é a primeira coisa a ser executada
1º Alocado espaço em memória
2º Cada atributo de classe é criado e inicializado com valores default (int = 0, Str = "")
3º Bloco de inicialização
4º Construtor

=============================

Norma para variáveis

Modificador estático + Modificador de acesso + Tipagem + nome da variavel = valor
   (static/"")           (public/private)    (int, double)

é possivel ter mais de um bloco de inicialização estático, que serão executados em ordem de leitura